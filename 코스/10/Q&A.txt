배열과 포인터.
포인터: 주소를 다루는 변수, 주소 - 양의 정수. 즉 포인터의 타입 자체는 정수형 변수와 같다. 
배열: 같은 타입변수들의 묶음. --> 인덱스를 붙여서 읽기/쓰기. 

주기/받기, 읽기/쓰기에서 변수의 이름은 뭘 의미??
int num = 100;
num 이라고 쓰면 뭘 의미할까? num이라는 변수가 가진 값. 
printf("%d", num); --> num의 값을 읽어서 출력
num = 1000; --> num의 값을 1000으로 변경

  int* p = &num; --> p라는 포인터에 num의 주소값을 쓰기
  int** pp = &p; --> pp라는 포인터에 p의 주소값을 쓰기
  (int*)* pp <---- 여기에는 (int* 타입의 변수의) 주소값이 들어가는데
  int* parray[10]; --> 정수포인터만 10개를 묶어서 다루는 배열
  parray 라는 이름만 적게되면 --> parray의 첫번째 요소의 주소값, 이 배열의 요소는 어떤 타입인가? int* 타입이다. int* 타입의 변수의 주소값을 갖게 되는 셈이다.
  (int*)* 타입임 --> 이중포인터

//////////////////////////
  int A[10];
  int* pA = A;
  for(int i=0; i<10; i++) {
    printf("A[%d]: 위치 %p\n",i, pA); pA++;
    //printf("A[%d]: 위치 %p\n",i, &A[i]);
  }
  char str[10];
  char* pStr = str;
  for(int i=0; i<10; i++) {
    //printf("str[%d]: 위치 %p\n",i, &str[i]);
    printf("str[%d]: 위치 %p\n",i, pStr); pStr++;
}

글자 1bit
int 4bit


///////////////////////////

int A[10];
읽기 쓰기 할 때, 인덱스를 붙여서 사용. A[3], A[i]
--> 그 인덱스에 해당하는 요소의 값. 
각각의 값을 매기기 위해 index 붙인건데 

그러면, 그냥 배열 이름만 쓰면?
A --> 배열의 값. - 배열의 값이 뭘까?
배열의 값: 배열의 위치를 나타내는것. 
배열의 위치? 배열의 첫번째 요소의 위치값. 

A ===> A[0]의 위치 값 즉 &A[0]
이 순간 배열의 값이 결국 포인터처럼 되고, 이래서 포인터와 배열이 비슷한것. 

이제 주기/받기로 넘어가서
배열 A를 어떤 함수의 파라미터로 주기 한다면, 뭐가 넘어가는 걸까?
A의 첫번째 요소의 주소가 넘어가겠지...

///////////////////////////////
int main(void) {
  int num=100;
  int* p = &num; // p는 포인터변수, 정수값이 들어있는 곳의 주소값을 담는다.
  printf("num: 가지고있는 값 %d / 자신의 위치 %p\n", num, &num);
  printf("p: 가지고있는 값 %p / 자신의 위치 %p\n", p, &p);
  return 0;
}
////////////////////////////


int A[10];
  printf("A: 가지고있는 값 %p / 자신의 위치 %p\n", A, &A);

  //for(int i=0; i<10; i++) A[i] = 999;
  //change(A);
  change2(A);
  for(int i=0; i<10; i++) printf("%d - ", A[i]);
  printf("\n");

  return 0;
}
void change(int numbers[]){
  for(int i=0; i<10; i++) numbers[i] = 999;
}
void change2(int* pnum){
  for(int i=0; i<10; i++){
    *pnum = 999;
    pnum++;
  }
}
